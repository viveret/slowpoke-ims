@model SlowPokeIMS.Web.ViewModels.IReadOnlyNodeViewModel
@{
    var meta = await Model.Model.Meta;
    string allText = null;
    bool isPDF = false;
    bool isImage = false;
    bool isHtml = false;
    var contentType = await Model.Doc.GetContentType();
    if (!string.IsNullOrWhiteSpace(contentType))
    {
        switch (contentType)
        {
            case "application/pdf":
            isPDF = true;
            break;
            case "text":
            allText = await Model.Doc.ReadAllText(Encoding.Unicode, Config.ContentPreview.NumLines);
            break;
            case "text/html":
            case "text/html; charset=utf-8":
            isHtml = true;
            allText = await Model.Doc.ReadAllText(Encoding.UTF8, Config.ContentPreview.NumLines);
            break;
            default:
            if (contentType.StartsWith("text/"))
            {
                allText = await Model.Doc.ReadAllText(Encoding.Unicode, Config.ContentPreview.NumLines);
            }
            else if (contentType.StartsWith("image/"))
            {
                isImage = true;
            }
            break;
        }
    }
}
<div class="grid--item grid--col12 s-card">
    @if (string.IsNullOrWhiteSpace(allText))
    {
        var urlRaw = @Url.ActionLink("Raw", "Home", values: new { path = Model.Model.Path.PathValue });
        if (isPDF)
        {
            <embed src="@urlRaw" class="w100" />
        }
        else if (isImage)
        {
            <img src="@urlRaw" class="w50" />
        }
        else
        {
            <span class="fs-italic">unknown content type or extension</span>
        }
    }
    else if (isHtml)
    {
        <iframe class="w100" sandbox srcdoc="@allText"></iframe>
    }
    else
    {
        <span class="w100" class="ws-pre-line">@allText</span>
    }
</div>